<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:solr="http://www.springframework.org/schema/data/solr"
	xmlns:cassandra="http://www.springframework.org/schema/data/cassandra"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/cql http://www.springframework.org/schema/cql/spring-cql-1.0.xsd
	 	http://www.springframework.org/schema/data/cassandra http://www.springframework.org/schema/data/cassandra/spring-cassandra.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd
		http://www.springframework.org/schema/data/solr http://www.springframework.org/schema/data/solr/spring-solr-1.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<context:component-scan base-package="com.aredvi" /> 
	<!-- <cassandra:repositories base-package="com.aredvi.repository" />
  	<cassandra:mapping entity-base-packages="com.aredvi.entity" /> -->
	<context:annotation-config />
	<mvc:annotation-driven />
	<mvc:resources location="/WEB-INF/utils/" mapping="/utils/**" />
	<task:executor id="asyncExecutor" pool-size="60" />
	<task:annotation-driven executor="asyncExecutor" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/vtemplates/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/properties/localization/messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean> 

	<!-- <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="268435456" /> 256 megs
	</bean> -->

 	<context:property-placeholder  location="classpath:cassandra.properties,classpath:log4j.properties,classpath:email.properties,classpath:solarserver.properties,classpath:mysql.properties" />
	

 	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${email.host}" />
		<property name="port" value="${email.port}" />
		<property name="username" value="${email.username}" />
		<property name="password" value="${email.password}" />

		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${email.smtp.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${email.smtp.starttls.enable}</prop>
				<prop key="mail.smtp.socketFactory.port">${email.smtp.socketFactory.port}</prop>
				<prop key="mail.smtp.socketFactory.class">${email.smtp.socketFactory.class}</prop>
			</props>
		</property>
  	</bean>

  <!-- REQUIRED: The Cassandra Cluster -->
  <!-- <cassandra:cluster id="cassandraCluster" contact-points="${cassandra.contactpoints}"  port="${cassandra.port}" /> -->

  <!-- REQUIRED: The Cassandra Session, built from the Cluster, and attaching 
    to a keyspace -->
 <!--  <cassandra:session id="cassandraSession" keyspace-name="${cassandra.keyspace}" /> -->

  <!-- REQUIRED: The Default Cassandra Converter used by CassandraTemplate -->
  <!-- <cassandra:converter />   -->

  <!-- REQUIRED: The Cassandra Template is the building block of all Spring Data Cassandra -->
  <!-- <cassandra:template id="cqlTemplate" /> -->

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
			</props>
		</property>
	</bean>
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${mysql.driverClassName}" />
		<property name="url" value="${mysql.databaseurl}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
	</bean>
	<!-- <bean id="dataSource" class="com.mysql.jdbc.jdbc2.optional.MysqlDataSource" 
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.databaseurl}" 
		p:username="${jdbc.username}" p:password="${jdbc.password}" /> -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${mysql.dialect}</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">create</prop> --> 
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>

	<tx:annotation-driven proxy-target-class="true" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<solr:repositories base-package="com.aredvi.solr"  multicore-support="true"/>
	
	<solr:solr-server id="solrServer" url="${solr.server.url}" maxConnections="100000" timeout="1500"/>
	<bean id="solrTemplate" class="org.springframework.data.solr.core.SolrTemplate">
		<constructor-arg index="0" ref="solrServerFactory" />
	</bean>
	<bean id="solrServerFactory" class="org.springframework.data.solr.server.support.MulticoreSolrServerFactory">
	    <constructor-arg ref="solrServer" />
	    <constructor-arg name="cores">
	        <list>
	            <value>aredvi</value>
	        </list>
	    </constructor-arg>
	</bean>

</beans>

